https://leetcode.com/problems/find-peak-element/
class Solution {
public:
    int findPeakElement(vector<int>& nums) {
            int i=0,j=nums.size()-1;
            while(i<=j)
            {
                int mid=(i+j)/2;
                if(mid==0)
                    return nums[j]>nums[i]?j:i;
                 if(mid != nums.size()-1  && mid==0 && nums[mid]>nums[mid+1])
                    return mid;
                if(mid != nums.size()-1 && nums[mid]>nums[mid-1] && nums[mid]>nums[mid+1])
                    return mid;
                else if(nums[mid]>nums[mid-1])
                    i=mid+1;
                else
                    j=mid-1;
            }
             return nums.size()-1;
    }   
};
or
class Solution {
public:
    int findPeakElement(vector<int>& nums) {
            int i=0,j=nums.size()-1;
            int n=nums.size();
            while(i<=j)
            {
                int mid=(i+j)/2;
                if(mid==0)
                    return nums[j]>nums[i]?j:i;
                 if (nums[mid]>nums[(mid+1)%n] && nums[mid]>nums[(mid-1+n)%n])
                    return mid;
                else if(nums[mid]>nums[mid-1])
                    i=mid+1;
                else
                    j=mid-1;
            }
             return nums.size()-1;
    }   
};
